{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Chat.js","Sidebar.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Chat","input","setInput","roomId","useParams","setRoomName","user","Date","length","timestamp","toDate","toUTCString","IconButton","SearchOutlined","displayName","onChange","e","target","type","placeholder","preventDefault","console","log","FieldValue","serverTimestamp","Sidebar","Rooms","setRooms","unsubscribe","photoURL","room","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af82c834.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from \"firebase\";\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBiBlX9zQSBLWErSD_23bk-JlJ-e7JUmf4\",\r\n    authDomain: \"whatsapp-challenge-1405d.firebaseapp.com\",\r\n    projectId: \"whatsapp-challenge-1405d\",\r\n    storageBucket: \"whatsapp-challenge-1405d.appspot.com\",\r\n    messagingSenderId: \"415991519055\",\r\n    appId: \"1:415991519055:web:439c83239656efc134973a\",\r\n    measurementId: \"G-SS9Z7T5TKR\"\r\n};\r\n  \r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider };\r\nexport default db;","import { Avatar } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport db from './firebase'\r\nimport './SidebarChat.css'\r\n\r\nfunction SidebarChat({ id, name, addNewChat }) {\r\n    const [seed, setSeed] = useState('');\r\n    const [messages, setMessages] = useState(\"\");\r\n    \r\n    useEffect(() => {\r\n        if(id){\r\n            db.collection('Rooms').doc(id).collection('messages').orderBy('timestamp','desc').onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            })\r\n        }\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000))\r\n    }, [])\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt(\"Please Enter Chat Room Name\");\r\n\r\n        if (roomName) {\r\n            //DO SOME STUFF DATABASE RELATED\r\n            db.collection('Rooms').add({\r\n                name: roomName\r\n            })\r\n        }\r\n    };\r\n\r\n    return !addNewChat ? (\r\n        <Link to={`/rooms/${id}`} key={id}>\r\n            <div className=\"sidebarChat\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n                <div className=\"sidebarChat_info\">\r\n                    <h3>{name}</h3>\r\n                    <p>{messages[0]?.message}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    ) : (\r\n        <div onClick={createChat}\r\n            className=\"sidebarChat\">\r\n            <h3 className=\"add-new-chat-title\"> Add New Chat Room</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SidebarChat\r\n","import React, { createContext, useContext, useReducer } from \"react\"\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({                     //TO SETUP DATA TOBE EXPORTED TO DATA LAYER\r\n    reducer, initialState, children }) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext (StateContext);//TO PULL INFO FROM DATA","import { SearchOutlined } from '@material-ui/icons';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\nimport './Chat.css'\r\nimport db from './firebase';\r\nimport './SidebarChat'\r\nimport firebase from 'firebase'    //to avoid problem of different timestamp\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Chat() {\r\n    const [input, setInput] = useState('');\r\n    const [seed, setSeed] = useState('');\r\n    const { roomId } = useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        if (roomId) {\r\n            db\r\n                .collection('Rooms')\r\n                .doc(roomId)\r\n                .onSnapshot(snapshot => {\r\n                setRoomName(snapshot.data().name);\r\n            })\r\n\r\n            db\r\n                .collection('Rooms')\r\n                .doc(roomId)\r\n                .collection(\"messages\")\r\n                .orderBy(\"timestamp\", \"asc\")\r\n                .onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map(doc => doc.data()))\r\n            });\r\n        }\r\n    }, [roomId]);\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000))\r\n    }, [roomId]);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"you typed >>>\", input)\r\n\r\n        db\r\n            .collection('Rooms')\r\n            .doc(roomId)\r\n            .collection('messages')\r\n            .add\r\n            ({\r\n                message: input,\r\n                name: user.displayName,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat_header\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n                <div className=\"chat_headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p className='chat-room-last-seen'>\r\n                        Last seen {\" \"}\r\n                        {new Date(\r\n                            messages[messages.length - 1]?.\r\n                            timestamp?.toDate()\r\n                        ).toUTCString()}\r\n                    </p>\r\n                </div>\r\n                <div className=\"chat_headerRight\">\r\n                    <IconButton >\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFileIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"chat_body\">\r\n            {messages.map(message => (\r\n                    <p className={`chat_message ${ message.name == user.displayName && 'chat_receiver'}`}>\r\n                        <span className=\"chat_name\">{message.name}</span>\r\n                        {message.message}\r\n                    <span\r\n                        className=\"chat_timestamp\">\r\n                        {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                    </span>\r\n                    </p>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"chat_footer\">\r\n                <IconButton>\r\n                    <EmojiEmotionsIcon />\r\n                </IconButton>\r\n                <form>\r\n                    <input\r\n                        value={input}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Type a message..\" />\r\n                    <button\r\n                        onClick={sendMessage}\r\n                        type=\"submit\">Send the message</button>\r\n                </form>\r\n                <IconButton>\r\n                    <MicIcon />\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Sidebar.css'\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport SidebarChat from './SidebarChat';\r\nimport db from './firebase';\r\nimport './SidebarChat'\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Sidebar() {\r\n    const [Rooms, setRooms] = useState([]);\r\n    const [{user},dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection('Rooms').onSnapshot((snapshot) =>\r\n        (\r\n            setRooms(snapshot.docs.map((doc) =>\r\n            ({\r\n                id: doc.id,\r\n                data: doc.data(),\r\n            })))\r\n        ));\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar_header\">\r\n                <Avatar className=\"myicon\" src={user?.photoURL} />\r\n                <div className=\"sidebar_headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar_search\">\r\n                <div className=\"sidebar_searchContainer\">\r\n                    <IconButton >\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n                    <input placeholder=\"Search or Start New Chat\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar_chats\">\r\n                <SidebarChat addNewChat />\r\n                {Rooms.map((room) => (\r\n                    <SidebarChat\r\n                        key={room.id}\r\n                        id={room.id}\r\n                        name={room.data.name}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar\r\n","export const initialState = {\r\n    user: null,         //INITIALLY WE D0 NOT WANT USER\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n\r\n    switch (action.type) {\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { auth, provider } from './firebase'\r\nimport './Login.css'\r\nimport { actionTypes } from './reducer'\r\nimport { useStateValue } from './StateProvider'\r\n\r\nfunction Login() {\r\n    const [{}, dispatch] = useStateValue();         //DISPATCH--- SHOOTS DATA WHENEVER GETS DATA\r\n    const signIn = () => {\r\n        auth\r\n            .signInWithPopup(provider)\r\n            .then((result ) => {\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user,\r\n                });\r\n            })\r\n            .catch((error) => alert(error.message));\r\n    };\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login_container\">\r\n                <img\r\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\">\r\n                </img>\r\n\r\n                <div className=\"login_heading\">\r\n                    <h4>Sign In To WhatsApp Clone</h4>\r\n                </div>\r\n                <Button\r\n                    type=\"submit\"\r\n                    onClick={signIn}>\r\n                    Sign In With Google\r\n            </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import  React from \"react\"\nimport './App.css';\nimport Chat from './Chat';\nimport Sidebar from './Sidebar';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from './Login';\nimport { useStateValue } from './StateProvider';\n\nfunction App() {\n\n  const [{ user }, dispatch] = useStateValue ();\n\n  return (\n    <div className=\"app\">\n\n      {!user ? (\n        <h1><Login /></h1>\n      ) :\n        (\n          <div className=\"app_body\">\n\n            <Router>\n\n              <Sidebar />\n              <Switch>\n\n                <Route path=\"/rooms/:roomId\">\n                  {/* chat */}\n                  <Chat />\n                </Route>\n\n                <Route path=\"/\">\n                  <Chat />\n                </Route>\n\n              </Switch>\n            </Router>\n          </div>\n        )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StateProvider } from './StateProvider';\nimport reducer, { initialState } from './reducer'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState}\n      reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}